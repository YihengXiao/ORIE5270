from scipy.optimize import minimize
import numpy as np



def Rosenbrock(x):
    """
    Rosenbrock function
    :param x: array(1xn)
    :return calculated value
    """
    n=len(x)
    if n<=1:
        return None
    res=0
    for i in range(n-1):
        res+=100*(x[i+1]-x[i]**2)**2+(1-x[i])**2
    return np.array(res)


if __name__ == "__main__":
    x0 = [[1.3, 0.7, 0.8],[-1,-2,1],[-3,2,1],[2.2,3.3,-1.1],[100,100,100]]
    for i in range(len(x0)):
        print("initial guess:")
        print(x0[i])
        res = minimize(Rosenbrock, x0[i], method='BFGS', options={'xtol': 1e-10, 'disp': True})
        print(res.x)